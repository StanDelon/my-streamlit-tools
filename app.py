import streamlit as st
import pandas as pd
import plotly.express as px
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç –î–∞—à–±–æ—Ä–¥", 
    page_icon="üìä", 
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üìä –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç –î–∞—à–±–æ—Ä–¥ (Demo)")
st.markdown("""
    *–≠—Ç–æ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—è –¥–∞—à–±–æ—Ä–¥–∞ —Å mock-–¥–∞–Ω–Ω—ã–º–∏. –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è OAuth-—Ç–æ–∫–µ–Ω.*
""")

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è mock-–¥–∞–Ω–Ω—ã—Ö
def generate_mock_data(date_from, date_to):
    campaigns = [
        "–ö–∞–º–ø–∞–Ω–∏—è_1_–†–µ–∫–ª–∞–º–∞_—Å–∞–π—Ç–∞",
        "–ö–∞–º–ø–∞–Ω–∏—è_2_–ú–æ–±–∏–ª—å–Ω–æ–µ_–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        "–ö–∞–º–ø–∞–Ω–∏—è_3_–°–µ–∑–æ–Ω–Ω–∞—è_—Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∞",
        "–ö–∞–º–ø–∞–Ω–∏—è_4_–ë—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–∏–µ",
        "–ö–∞–º–ø–∞–Ω–∏—è_5_–†–µ—Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥"
    ]
    
    days = (date_to - date_from).days + 1
    date_range = pd.date_range(date_from, periods=days)
    
    data = []
    for date in date_range:
        for campaign in campaigns:
            clicks = int(50 + abs(hash(f"{date}{campaign}")) % 150)
            impressions = clicks * (30 + hash(f"{date}{campaign}") % 20)
            cost = clicks * (20 + hash(f"{date}{campaign}") % 15)
            ctr = (clicks / impressions * 100) if impressions > 0 else 0
            
            data.append({
                "Date": date.date(),
                "Campaign": campaign,
                "Clicks": clicks,
                "Impressions": impressions,
                "Cost": cost,
                "CTR": round(ctr, 2),
                "CPC": round(cost / clicks, 2) if clicks > 0 else 0
            })
    
    return pd.DataFrame(data)

# –°–∞–π–¥–±–∞—Ä —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
with st.sidebar:
    st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    # –í—ã–±–æ—Ä –¥–∞—Ç
    date_from = st.date_input(
        "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞", 
        datetime.now().replace(day=1),
        key="date_from"
    )
    date_to = st.date_input(
        "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è", 
        datetime.now(),
        key="date_to"
    )
    
    # –§–∏–ª—å—Ç—Ä –∫–∞–º–ø–∞–Ω–∏–π
    st.header("üîç –§–∏–ª—å—Ç—Ä—ã")
    all_campaigns = st.checkbox("–í—Å–µ –∫–∞–º–ø–∞–Ω–∏–∏", True)
    if not all_campaigns:
        selected_campaigns = st.multiselect(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–º–ø–∞–Ω–∏–∏",
            options=[],
            default=[],
            disabled=True,
            help="–í –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –∫–∞–º–ø–∞–Ω–∏–∏"
        )
    
    st.markdown("---")
    st.markdown("""
    **–î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:**
    1. –ü–æ–ª—É—á–∏—Ç–µ OAuth-—Ç–æ–∫–µ–Ω –≤ –Ø–Ω–¥–µ–∫—Å.–î–∏—Ä–µ–∫—Ç
    2. –£–∫–∞–∂–∏—Ç–µ –ª–æ–≥–∏–Ω –∫–ª–∏–µ–Ω—Ç–∞
    3. –ó–∞–º–µ–Ω–∏—Ç–µ mock-–¥–∞–Ω–Ω—ã–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ API-–∑–∞–ø—Ä–æ—Å—ã
    """)

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
df = generate_mock_data(date_from, date_to)

# –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
st.subheader("üìà –ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏")
kpi1, kpi2, kpi3, kpi4 = st.columns(4)
kpi1.metric(
    label="–û–±—â–∏–µ –∫–ª–∏–∫–∏", 
    value=f"{df['Clicks'].sum():,}",
    delta=f"{df['Clicks'].sum()/len(df['Date'].unique()):.0f} –≤ –¥–µ–Ω—å"
)
kpi2.metric(
    label="–û–±—â–∏–µ –ø–æ–∫–∞–∑—ã", 
    value=f"{df['Impressions'].sum():,}",
    delta=f"{df['Impressions'].sum()/len(df['Date'].unique()):,.0f} –≤ –¥–µ–Ω—å"
)
kpi3.metric(
    label="–û–±—â–∏–π –±—é–¥–∂–µ—Ç", 
    value=f"{df['Cost'].sum():,.0f} ‚ÇΩ",
    delta=f"{df['Cost'].sum()/len(df['Date'].unique()):,.0f} ‚ÇΩ –≤ –¥–µ–Ω—å"
)
kpi4.metric(
    label="–°—Ä–µ–¥–Ω–∏–π CTR", 
    value=f"{df['CTR'].mean():.2f}%",
    delta=f"{df['CTR'].mean() - df[df['Date'] < df['Date'].max()]['CTR'].mean():.2f}%"
)

# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
tab1, tab2, tab3, tab4 = st.tabs(["üìä –î–∏–Ω–∞–º–∏–∫–∞", "üîÑ CTR", "üí∞ –†–∞—Å—Ö–æ–¥—ã", "üìã –î–∞–Ω–Ω—ã–µ"])

with tab1:
    fig = px.line(
        df.groupby('Date').agg({
            'Clicks': 'sum',
            'Impressions': 'sum',
            'Cost': 'sum'
        }).reset_index(),
        x='Date',
        y=['Clicks', 'Impressions'],
        title='–î–∏–Ω–∞–º–∏–∫–∞ –∫–ª–∏–∫–æ–≤ –∏ –ø–æ–∫–∞–∑–æ–≤',
        labels={'value': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', 'variable': '–ú–µ—Ç—Ä–∏–∫–∞'},
        height=500
    )
    st.plotly_chart(fig, use_container_width=True)

with tab2:
    col1, col2 = st.columns(2)
    with col1:
        fig_ctr = px.line(
            df.groupby('Date')['CTR'].mean().reset_index(),
            x='Date',
            y='CTR',
            title='–°—Ä–µ–¥–Ω–∏–π CTR –ø–æ –¥–Ω—è–º',
            labels={'CTR': 'CTR (%)'},
            height=400
        )
        st.plotly_chart(fig_ctr, use_container_width=True)
    
    with col2:
        fig_ctr_campaign = px.bar(
            df.groupby('Campaign')['CTR'].mean().sort_values().reset_index(),
            x='CTR',
            y='Campaign',
            orientation='h',
            title='CTR –ø–æ –∫–∞–º–ø–∞–Ω–∏—è–º (—Å—Ä–µ–¥–Ω–∏–π)',
            labels={'CTR': 'CTR (%)', 'Campaign': '–ö–∞–º–ø–∞–Ω–∏—è'},
            height=400
        )
        st.plotly_chart(fig_ctr_campaign, use_container_width=True)

with tab3:
    fig_cost = px.area(
        df.groupby(['Date', 'Campaign'])['Cost'].sum().reset_index(),
        x='Date',
        y='Cost',
        color='Campaign',
        title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –∫–∞–º–ø–∞–Ω–∏—è–º',
        labels={'Cost': '–†–∞—Å—Ö–æ–¥—ã (‚ÇΩ)'},
        height=500
    )
    st.plotly_chart(fig_cost, use_container_width=True)

with tab4:
    st.dataframe(
        df.sort_values(['Date', 'Campaign']),
        column_config={
            "Date": st.column_config.DateColumn("–î–∞—Ç–∞"),
            "Cost": st.column_config.NumberColumn("–†–∞—Å—Ö–æ–¥—ã", format="%.0f ‚ÇΩ"),
            "CTR": st.column_config.NumberColumn("CTR", format="%.2f%%"),
            "CPC": st.column_config.NumberColumn("CPC", format="%.2f ‚ÇΩ")
        },
        hide_index=True,
        use_container_width=True
    )

# Footer
st.markdown("---")
st.markdown("""
    **GitHub:** [yandex-direct-dashboard](https://github.com/yourusername/yandex-direct-dashboard)  
    *–î–∞–Ω–Ω—ã–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏*
""")
